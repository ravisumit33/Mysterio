# Generated by Django 3.2.23 on 2023-12-23 09:15

import chat.models.message
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('chat', '0005_alter_player_host'),
    ]

    operations = [
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='GroupRoomData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('avatar_url', models.URLField(blank=True)),
                ('zscore', models.FloatField(null=True)),
                ('password', models.CharField(blank=True, max_length=128)),
                ('description', models.CharField(blank=True, max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='MatchRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_matched', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('message_type', models.IntegerField()),
                ('object_id', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_type', models.CharField(choices=[('gr', 'Group'), ('in', 'Individual')], max_length=2)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='TextData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=65535)),
            ],
            bases=(chat.models.message.MessageMixin, models.Model),
        ),
        migrations.RemoveField(
            model_name='groupchannel',
            name='chat_session',
        ),
        migrations.RemoveField(
            model_name='groupchannel',
            name='group_room',
        ),
        migrations.RemoveField(
            model_name='grouproom',
            name='admins',
        ),
        migrations.RemoveField(
            model_name='grouproom',
            name='player',
        ),
        migrations.RemoveField(
            model_name='individualchannel',
            name='chat_session',
        ),
        migrations.RemoveField(
            model_name='individualroom',
            name='channel1',
        ),
        migrations.RemoveField(
            model_name='individualroom',
            name='channel2',
        ),
        migrations.RemoveField(
            model_name='individualroom',
            name='player',
        ),
        migrations.RemoveField(
            model_name='textmessage',
            name='group_room',
        ),
        migrations.RemoveField(
            model_name='textmessage',
            name='sender_channel',
        ),
        migrations.RenameField(
            model_name='chatsession',
            old_name='tab_session_id',
            new_name='client_session_id',
        ),
        migrations.AlterField(
            model_name='chatsession',
            name='name',
            field=models.CharField(max_length=20),
        ),
        migrations.AlterField(
            model_name='player',
            name='host',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='player', related_query_name='player', to='chat.chatsession'),
        ),
        migrations.AlterField(
            model_name='player',
            name='state',
            field=models.SmallIntegerField(choices=[(-1, 'unstarted'), (0, 'ended'), (1, 'playing'), (2, 'paused'), (3, 'buffering'), (5, 'video cued')], default=-1),
        ),
        migrations.AddConstraint(
            model_name='player',
            constraint=models.CheckConstraint(check=models.Q(('name__in', ['YT'])), name='valid_name_choice'),
        ),
        migrations.AddConstraint(
            model_name='player',
            constraint=models.CheckConstraint(check=models.Q(('state__in', [-1, 0, 1, 2, 3, 5])), name='valid_state_choice'),
        ),
        migrations.DeleteModel(
            name='GroupChannel',
        ),
        migrations.DeleteModel(
            name='GroupRoom',
        ),
        migrations.DeleteModel(
            name='IndividualChannel',
        ),
        migrations.DeleteModel(
            name='IndividualRoom',
        ),
        migrations.DeleteModel(
            name='TextMessage',
        ),
        migrations.AddConstraint(
            model_name='room',
            constraint=models.CheckConstraint(check=models.Q(('room_type__in', ['gr', 'in'])), name='valid_room_type_choice'),
        ),
        migrations.AddField(
            model_name='message',
            name='content_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='message',
            name='room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', related_query_name='message', to='chat.room'),
        ),
        migrations.AddField(
            model_name='message',
            name='sender_channel',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='messages', related_query_name='message', to='chat.channel'),
        ),
        migrations.AddField(
            model_name='matchrequest',
            name='channel',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='chat.channel'),
        ),
        migrations.AddField(
            model_name='grouproomdata',
            name='admins',
            field=models.ManyToManyField(related_name='accessible_group_rooms', related_query_name='accessible_group_room', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='grouproomdata',
            name='creator',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='group_rooms', related_query_name='group_room', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='grouproomdata',
            name='likers',
            field=models.ManyToManyField(related_name='favorite_rooms', related_query_name='favorite_room', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='grouproomdata',
            name='room',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='room_data', related_query_name='room_data', to='chat.room'),
        ),
        migrations.AddField(
            model_name='channel',
            name='chat_session',
            field=models.OneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='chat.chatsession'),
        ),
        migrations.AddField(
            model_name='channel',
            name='room',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='channels', related_query_name='channel', to='chat.room'),
        ),
        migrations.AddField(
            model_name='player',
            name='room',
            field=models.OneToOneField(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='player', related_query_name='player', to='chat.room'),
            preserve_default=False,
        ),
        migrations.AlterUniqueTogether(
            name='message',
            unique_together={('content_type', 'object_id')},
        ),
    ]
